services:
    reverse-proxy:
      image: traefik:v2.3
      container_name: reverse-proxy
      command:
        - "--api.insecure=false" # Désactive l'API Traefik en mode non sécurisé
        - "--providers.docker" # Active la gestion automatique des conteneurs Docker
        - "--entrypoints.web.address=:80" # Définit l'entrée HTTP sur le port 80
        - "--entrypoints.websecure.address=:443" # Définit l'entrée HTTPS sur le port 443
        - "--certificatesresolvers.myresolver.acme.tlschallenge=true" # Active le défi TLS pour les certificats Let's Encrypt
        - "--certificatesresolvers.myresolver.acme.email=your@mail.com" # Adresse email utilisée pour Let's Encrypt
        - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json" # Emplacement où stocker les certificats générés
      ports:
        - "80:80" # (HTTP)
        - "443:443" # (HTTPS)
      volumes:
        - "/var/run/docker.sock:/var/run/docker.sock"
        - "./letsencrypt:/letsencrypt"
      networks:
        - vps-network


    web-app:
      build:
        context: .
        dockerfile: Dockerfile
      container_name: mds-startup-web-app
      ports:
        - "3000:3000"
      volumes:
        - .:/app
        - /app/node_modules
      networks:
        - vps-network
      labels: # Configuration Traefik pour le service web
        - "traefik.enable=true" # Active la gestion Traefik pour ce service
        - "traefik.http.routers.web-app.rule=Host(`vps108078.serveur-vps.net`)" # Règle pour router le domaine vers le service
        - "traefik.http.routers.web-app.entrypoints=websecure" # Utilise l'entrée HTTPS
        - "traefik.http.routers.web-app.tls=true" # Active le protocole HTTPS
        - "traefik.http.routers.web-app.tls.certresolver=myresolver" # Résolution TLS via Let's Encrypt

networks:
  vps-network: 
    external: true